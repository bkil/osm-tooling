#!/bin/sh
# Test: https://bkil.gitlab.io/spamisi/

main() {
  local OUT="out"
  mkdir -p "$OUT" || exit 1
  local HTML="$OUT/html"
  local URLBASE="https://osm-gimmisn.vmiklos.hu/"
  local URL="${URLBASE}osm/index.html"

  download "$URL" "$URLBASE" "$HTML"

  {
    get_header "$OUT"
    get_pages "$OUT" "$URL" "$HTML"
    get_footer
  } > "$OUT/index.html"
}

download() {
# TODO: osm/static/stats.json (via stats.ts)
# TODO: osm/static/relations.json (via main.ts)
#    --timestamping
# --reject-regex "^${URLBASE}(osm/(street(-housenumbers)?|filter-for/refcounty)/.*|.*/update-result)$"
# --accept-regex "^${URLBASE}(robots\.txt|osm/(index\.html|static/[^/]+|([^/]+/balatonalmadi/view-[^/]+)|(filter-for|housenumber-stats)/.*|(additional|missing)-[^/]+/[^/]+/view-result))$" \
  local URL="$1"
  local URLBASE="$2"
  local HTML="$3"

  wget \
    --directory-prefix="$HTML" \
    --force-directories \
    --no-host-directories \
    --wait=1 \
    --no-parent \
    --recursive \
    --level 4 \
    --adjust-extension \
    --no-clobber \
    --backups=0 \
    --continue \
    --accept-regex "^${URLBASE}(robots\.txt|osm/(index\.html|static/[^/]+|([^/]+/balatonalmadi/view-[^/]+)|(filter-for|housenumber-stats)/.*|(additional|missing)-[^/]+/balatonalmadi/view-result))$" \
    "$URL"
}

get_pages() {
  local OUT="$1"
  local URL="$2"
  local HTML="$3"

  local IDS="$OUT/downloaded-ids.txt"
  local TMP="$OUT/redlinked.html.tmp"
  rm "$IDS" 2>/dev/null

  local MAIN="`echo "$URL" | sed "s~^.*://[^/]*/~$HTML/~"`"

  {
    find "$HTML" -type f |
    sort |
    fgrep -v "$MAIN" |
    grep -E "^$HTML/osm/((([^/]+/balatonalmadi)|filter-for|housenumber-stats)/|(additional|missing)-[^/]+/[^/]+/view-result)" |
    grep -v "/update-result$"

    echo "$MAIN"
  } |
  while read FILE; do
    local NAME="`echo "$FILE" | sed "s~^$HTML/~~ ; s~/index.html$~~ ; s~\.html$~~ ; s~/~--~g"`"

    echo "$NAME" >> "$IDS"

    get_page "$NAME" "$FILE"
  done > "$TMP"
  local IDREGEX="`sed ":l; N; s~\n~|~g; t l" "$IDS"`"
  sed -r "s~(<a class=\")red(link\" href=\"#($IDREGEX)\")~\1\2~g" "$TMP"
  rm "$TMP"
}

get_page() {
  local NAME="$1"
  local FILE="$2"

  local TITLE="`sed -nr "s~^.*<title>(.*)</title>.*$~\1~ ; T e; p; :e" "$FILE"`"
  [ -n "$TITLE" ] || local TITLE="$NAME"
  cat << EOF

<div id="$NAME" class="page">
<div class="title">$TITLE - generated by <a href="https://github.com/bkil/osm-tooling/blob/master/src/web/spamisi.sh">spamisi.sh</a></div>
EOF

  if
    fgrep -q "<!DOCTYPE html>" "$FILE"
  then

  fgrep -v "<!DOCTYPE html>" "$FILE" |
  sed -r "
    s~^.*<body>~~
    s~</body></html>$~~

    s~ id=\"~ id=\"$NAME--~g

    s~(<a href=\"#)([^\"])~\1$NAME--\2~g

    s~(<a href=\"#)(\")~\1$NAME\2~g

    s~(<a href=\"/[^\"]*)/(\")~\1\2~g
    t l
    :l
    s~(<a href=\"/[^\"/]*)/~\1--~g
    t l
    s~(<a)( href=\")/([^\"/]*\")~\1 class=\"redlink\"\2#\3~g
  "

  else
    echo "<pre>"
    cat "$FILE"
    echo "</pre>"
  fi
  
  cat << EOF
</div>
EOF
}

get_header() {
  local OUT="$1"

  cat << EOF
<!DOCTYPE html>
<html lang=""><head><title>SPA-Misi</title><meta charset="UTF-8" /><style>
EOF

  cat "$OUT/html/osm/static/osm.css"

  cat << EOF
.pages > .page:target ~ .page:last-child, .pages > .page {
  display: none;
}

.pages > :last-child, .pages > .page:target {
  display: block;
}

.title {
  color: #fff;
  background-color: #f00;
}

.redlink {
  color: #900;
}
.link {
  color: #090;
  text-decoration: underline;   
}
.link:hover,
.link:focus {
  color: #090;
  background-color: #efe;
  cursor: pointer;
}
</style>
<meta name="viewport" content="width=device-width, initial-scale=1" />
</head><body>
<div class="pages">
EOF
}

get_js() {
  cat << EOF
<script>
EOF

  sed -r "
    s~(getElementById\(\")(daily\")~\1osm--housenumber-stats--hungary--\2~
    s~(uriPrefix=\"/)osm(\")~\1spamisi\2~
  " "$OUT/html/osm/static/bundle.js"

  cat << EOF
</script>
EOF
}

get_footer() {
  cat << EOF
</div>
EOF

  get_js

  cat << EOF
</body></html>
EOF
}

main "$@"
